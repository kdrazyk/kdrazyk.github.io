:properties:
#+title: Krzywe Bézier w robotyce
#+author: Kacper Drążyk
#+date: <2024-03-17 Sun>
#+description: Prezentacja na temat krzywych Bézier i ich zastosowania w robotyce.
#+startup: show2levels latexpreview
#+options: date:nil author:nil timestamp:nil toc:nil reveal_slide_number:c num:nil reveal_width:1400 reveal_height:1000
#+reveal_root: ../reveal.js
#+reveal_trans: slide
#+reveal_theme: bezier
#+reveal_hlevel: 5
# Set up the title slide.
#+REVEAL_TITLE_SLIDE: <h2>%t</h2><h2>%s</h2><h3>%A %a</h3><img src="%q" style="width:500px; height:500px;"><p><a href="%u">%u</a></p><p>
#+REVEAL_TALK_URL: https://kdrazyk.github.io
#+REVEAL_TALK_QR_CODE: ../qrcode.svg

# paleta kolorów
# #FFFFFF biały
# #FE1053 czerwony
# #33BBFB niebieski
# #0CFFA7 zielony
# #FFDD4E żółty
:end:

* Czym są krzywe Bézier
#+REVEAL_HTML: <div style="display:flex; justify-content:center; align-items:center;">
\[\begin{cases} x = f_1(t)\\ y = f_2(t)\\ z = f_3(t)\\t \in [0,1] \end{cases} \]
# https://en.wikipedia.org/wiki/B%C3%A9zier_curve#/media/File:Bezier_curve.svg
#+ATTR_HTML: :height 600
[[./img/Bezier_curve.svg]]
#+REVEAL_HTML: </div>

#+begin_notes
Krzywe Bezier należą do rodziny krzywych parametrycznych.
#+end_notes

** Historia
#+REVEAL_HTML: <div style="display:flex; justify-content:center; align-items:center; flex-direction:row;">
#+REVEAL_HTML: <div style="width:30vw;">
# https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Falchetron.com%2Fcdn%2Fpaul-de-casteljau-5790eae5-617d-4de2-8650-8c1c1d57ece-resize-750.jpeg&f=1&nofb=1&ipt=79e6664cac3ddc8cafc4a3b5f48d826d18d0047e3b6145a6d15eb6cfb4c97645&ipo=images
#+ATTR_HTML: :height 300
[[./img/Paul_de_Casteljau.jpg]]

Paul de Casteljau
#+REVEAL_HTML: </div>
#+REVEAL_HTML: <div style="width:30vw;">
# https://en.wikipedia.org/wiki/File:Img-Pierre_Bézier.jpg
#+ATTR_HTML: :height 300
[[./img/Pierre_Bezier.jpg]]

Pierre Bézier
#+REVEAL_HTML: </div>
#+REVEAL_HTML: <div style="width:30vw;">
#+ATTR_HTML: :height 300
[[./img/Peugeot_204.jpg]]

Peugeot 204
#+REVEAL_HTML: </div>
#+REVEAL_HTML: </div>

#+begin_notes
Zostały odkryte niezależnie w połowie XXw. przez dwóch francuzów: matematyka Paul'a de Casteljau oraz inżyniera Pierre'a Bézier. Nazwa uwzględnia tylko jednego z nich, ponieważ Pierre znacznie wcześniej opublikował swoje odkrycie.
#+end_notes

* Gdzie są stosowane?
#+REVEAL_HTML: <div style="display:flex; justify-content:center; align-items:center;">
#+ATTR_HTML: :height 500
[[./img/inkscape_bezier.png]]
# https://github.com/rezaerami/IconBox
#+ATTR_HTML: :height 500
[[./img/jumping_squares.gif]]
# https://www.fanuc.eu/~/media/corporate/products/robots/lrmate/generic/400x600/int-ro-pr-lrm200-l-1.jpg
#+ATTR_HTML: :height 500
[[./img/fanuc_lrm200id.jpg]]
#+REVEAL_HTML: </div>

#+begin_notes
Krzywe Bézier zrodziły się z potrzeby opisu matematycznego bardziej złożonych krztałtów niż linie proste i okręgi.

Pierre Bézier wykorzystał swoje odkrycie aby stworzyć jeden z pierwszych programów CAD w 1968 roku!

Poza oprogramowaniem CAD znalazły swoje zastosowanie w grafice komputerowej, animacji, czcionkach, a także robotyce, o czym będzie dalsza część tej prezentacji.
#+end_notes

* Planowanie trajektorii
# https://xkcd.com/2821/
#+ATTR_HTML: :height 800
[[./img/xkcd-bezier.svg]]

** Point to point
#+REVEAL_HTML: <div style="display:flex; justify-content:center; align-items:center; flex-direction:row;">
#+ATTR_HTML: :height 800
[[./img/point-to-point.svg]]

- interpolacja liniowa pomiędzy punktami
- konieczne zatrzymanie w każdym punkcie
- małe wymagania obliczeniowe
#+REVEAL_HTML: </div>

** Corner smoothing
#+REVEAL_HTML: <div style="display:flex; justify-content:center; align-items:center; flex-direction:row;">
#+ATTR_HTML: :height 800
[[./img/corner-smoothing.svg]]

- łagodniejsze zmiany kierunku
- nie każdy punkt jest osiągany
- większe wymagania obliczeniowe
#+REVEAL_HTML: </div>

** Krzywe Bézier
#+REVEAL_HTML: <div style="display:flex; justify-content:center; align-items:center; flex-direction:row;">
#+ATTR_HTML: :height 800
[[./img/bezier-trajektoria.svg]]

- dowolna płynność ruchu
- punkty mogą być osiągane
- największe wymagania obliczeniowe
#+REVEAL_HTML: </div>

* Opis matematyczny
#+REVEAL_HTML: <div style="display:flex; justify-content:center; align-items:center; flex-direction:row;">
# https://en.wikipedia.org/wiki/B%C3%A9zier_curve#/media/File:Quadratic_Béziers_in_string_art.svg
#+ATTR_HTML: :height 800
[[./img/welding-robot.jpg]]

# https://tech-mate.pl/wp-content/uploads/2022/10/kerfus-tm-scaled.jpg

#+ATTR_HTML: :height 800
[[./img/kerfus-tm-scaled.jpg]]

#+REVEAL_HTML: </div>

** Interpolacja liniowa
#+REVEAL_HTML: <div style="display:flex; justify-content:center; align-items:center; flex-direction:column;">
\[\displaystyle \mathbf {P} (t)=(1-t)\mathbf {P} _{0}+t\mathbf {P} _{1},\ 0\leq t\leq 1\]

#+REVEAL_HTML: <video width="960" loop data-autoplay data-src="./img/lerp.mp4" type="video/mp4"></video>
#+REVEAL_HTML: </div>

** Algorytm de Casteljau
#+REVEAL_HTML: <video width="960" data-autoplay data-src="./img/de_casteljau.mp4" type="video/mp4"></video>

#+ATTR_REVEAL: :frag fade-in
Krzywa Bézier II rzędu

*** Krzywa Bézier III rzędu
#+REVEAL_HTML: <video width="960" data-autoplay data-src="./img/de_casteljau2.mp4" type="video/mp4"></video>

*** Krzywa Bézier XII rzędu
#+REVEAL_HTML: <video width="960" data-autoplay data-src="./img/de_casteljau12.mp4" type="video/mp4"></video>

*** Równanie opisaujące krzywą III rzędu

\[\displaystyle \mathbf {B} (t)=(1-t)^{3}\mathbf {P} _{0}+3(1-t)^{2}t\mathbf {P} _{1}+3(1-t)t^{2}\mathbf {P} _{2}+t^{3}\mathbf {P} _{3},\ 0\leq t\leq 1\]

#+ATTR_REVEAL: :frag fade-in
\[\mathbf B(t) = \begin{bmatrix} 1 & t & t^2 & t^3 \end{bmatrix} \cdot \begin{bmatrix} 1 & 0 & 0 & 0\\-3 & 3 & 0 & 0\\3 & -6 & 3 & 0\\-1 & 3 & -3 & 1\\ \end{bmatrix} \cdot \begin{bmatrix} P_0 \\ P_1 \\ P_2 \\ P_3 \end{bmatrix}\]

** Wielomiany Bernsteina
#+REVEAL_HTML: <div style="display:flex; justify-content:center; align-items:center; flex-direction:row;">
#+ATTR_HTML: :height 600
[[./img/bernstein3.png]]

\[\begin{split} B(t) = \,&  P_0 \cdot (-t^3 + 3t^2 -3t +1) + \\& P_1 \cdot (3t^3 - 6t^2 + 3t) +\\& P_3 \cdot (-3t^3 +3t^2) +\\&P_3 \cdot (t^3) \end{split} \]
#+REVEAL_HTML: </div>

*** Zakres oddziaływań punktów
#+ATTR_HTML: :height 800
[[./img/bernstein.png]]

#+ATTR_REVEAL: :frag fade-in
Krzywe Bézier nie umożliwiają kontroli lokalnej

* Spline - funkcja sklejana
#+REVEAL_HTML: <video width="1200" data-autoplay data-src="./img/spline.mp4" type="video/mp4"></video>

#+REVEAL: split
#+ATTR_HTML: :height 800
[[./img/spline-basis.png]]


** Ciągłość
#+ATTR_HTML: :height 800
[[./img/c0.png]]

#+REVEAL: split
\[\mathbf B(t) = \begin{bmatrix} 1 & t & t^2 & t^3 \end{bmatrix} \cdot \begin{bmatrix} 1 & 0 & 0 & 0\\-3 & 3 & 0 & 0\\3 & -6 & 3 & 0\\-1 & 3 & -3 & 1\\ \end{bmatrix} \cdot \begin{bmatrix} P_0 \\ P_1 \\ P_2 \\ P_3 \end{bmatrix}\]

#+ATTR_REVEAL: :frag fade-in
\[ \frac{d}{dt} \mathbf B(t) = \begin{bmatrix} 0 & 1 & 2t & 3t^2 \end{bmatrix} \cdot \begin{bmatrix} 1 & 0 & 0 & 0\\-3 & 3 & 0 & 0\\3 & -6 & 3 & 0\\-1 & 3 & -3 & 1\\ \end{bmatrix} \cdot \begin{bmatrix} P_0 \\ P_1 \\ P_2 \\ P_3 \end{bmatrix}\]

#+ATTR_REVEAL: :frag fade-in
\[ \frac{d^2}{dt^2} \mathbf B(t) = \begin{bmatrix} 0 & 0 & 2 & 6t \end{bmatrix} \cdot \begin{bmatrix} 1 & 0 & 0 & 0\\-3 & 3 & 0 & 0\\3 & -6 & 3 & 0\\-1 & 3 & -3 & 1\\ \end{bmatrix} \cdot \begin{bmatrix} P_0 \\ P_1 \\ P_2 \\ P_3 \end{bmatrix}\]

** C1 - prędkość
#+REVEAL_HTML: <video width="1200" data-autoplay data-src="./img/velocity.mp4" type="video/mp4"></video>

** C2 - przyspieszenie
#+REVEAL_HTML: <video width="1200" data-autoplay data-src="./img/c2.mp4" type="video/mp4"></video>

** Inne opcje
#+REVEAL_HTML: <video width="1200" loop data-autoplay data-src="./img/nurbs.mp4" type="video/mp4"></video>

* Zadanie robotyka
# https://robotics.stackexchange.com/questions/18102/what-are-the-equations-of-a-s-curve-position-path

#+ATTR_HTML: :height 800
[[./img/s-curve.png]]


* Badania naukowe
#+ATTR_HTML: :height 800
[[./img/research.png]]

* Aplikacja
#+REVEAL_HTML: <div style="display:flex; justify-content:center; align-items:center; flex-direction:column;">
#+ATTR_HTML: :height 600
[[./img/bezier-app-qrcode.svg]]

https://kdrazyk.github.io/ → Aplikacja
#+REVEAL_HTML: </div>

#+REVEAL: split data-background-iframe="../bezier-app/index.html" data-background-interactive
* Więcej informacji
#+ATTR_HTML: :height 600
[[./img/the_continuity_of_splines.jpg]]

*Freya Holmér*

https://www.youtube.com/watch?v=jvPPXbo87ds

* Dziękuję za uwagę
Najważniejszy wniosek:
#+begin_quote
Płynniejsze trajektorie ograniczają drgania i zużycie części, a przez zwiększają wydajność oraz dokładność robotów.
#+end_quote

* Bibliografia
- https://www.mdpi.com/2076-3417/13/15/8789
- https://www.mdpi.com/2076-3417/13/24/13210
- https://pl.wikipedia.org/wiki/NURBS
- https://en.wikipedia.org/wiki/B-spline
- https://en.wikipedia.org/wiki/B%C3%A9zier_curve

